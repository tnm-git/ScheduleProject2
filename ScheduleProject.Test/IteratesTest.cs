using System;
using System.Globalization;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using ScheduleProject.schedule;

namespace ScheduleProject.Tests
{
	[TestClass]
	public class IteratesTest
	{
		[DataTestMethod]
		[DataRow("2100.12.31 23:59:59.999", "2000-01-01 00:00:00.000", "2100-12-31 23:59:59.999")]//01 макс. количество итераций при проверке
		[DataRow("*.*.* * *:*:*.*", "2000-01-01 00:00:00.001", "2000-01-01 00:00:00.001")]//02 "*.*.* * *:*:*.*" (раз в 1 мс)
		[DataRow("*.*.* * *:*:*.*", "2100-12-31 23:59:59.999", "2100-12-31 23:59:59.999")]//03
		[DataRow("*.*.* 1,3,5 *:*:*.*", "2021-08-02 00:00:00.500", "2021-08-02 00:00:00.500")]//04 1,2,3-5,10-20/3 означает список 1,2,3,4,5,10,13,16,19
		[DataRow("*.*.* 1,3,5 *:*:*.*", "2021-08-05 00:00:00.500", "2021-08-06 00:00:00.000")]//05
		[DataRow("*.*.* * *:*:*.1,2,3-5,10-20/3", "2020-01-01 00:00:00.011", "2020-01-01 00:00:00.013")]//06
		[DataRow("*.*.* * *:*:*.1,2,3-5,10-20/3", "2020-12-31 23:59:59.020", "2021-01-01 00:00:00.001")]//07
		[DataRow("*.*.* * */4:*:*", "2020-01-01 00:00:00.000", "2020-01-01 00:00:00.000")]//08 (для часов) */4 означает 0,4,8,12,16,20
		[DataRow("*.*.* * */4:*:*", "2020-12-31 21:00:00.000", "2021-01-01 00:00:00.000")]//09
		[DataRow("*.9.*/2 1-5 10:00:00.000", "2020-09-03 10:00:00.000", "2020-09-03 10:00:00.000")]//10 *.9.*/2 1-5 10:00:00.000 означает 10:00 во все дни с пн. по пт. по нечетным числам в сентябре
		[DataRow("*.9.*/2 1-5 10:00:00.000", "2020-09-30 12:00:00.000", "2021-09-01 10:00:00.000")]//11
		[DataRow("*:00:00", "2020-01-01 00:00:00.000", "2020-01-01 00:00:00.000")]//12 *:00:00 означает начало любого часа
		[DataRow("*:00:00", "2020-12-31 23:59:59.999", "2021-01-01 00:00:00.000")]//13
		[DataRow("*.*.01 01:30:00", "2020-01-01 01:30:00.000", "2020-01-01 01:30:00.000")] //14  *.*.01 01:30:00 означает 01:30 по первым числам каждого месяца
		[DataRow("*.*.01 01:30:00", "2020-12-31 01:30:00.001", "2021-01-01 01:30:00.000")] //15
		[DataRow("*.*.32 12:00:00", "2020-01-31 12:00:00.000", "2020-01-31 12:00:00.000")] //16   32-й день означает последнее число месяца
		[DataRow("*.*.32 12:00:00", "2020-01-31 12:00:00.001", "2020-02-29 12:00:00.000")] //17
		public void NearestEvent(string scheduleStr, string time, string expected)
		{
			var schedule = new Schedule(scheduleStr);

			Console.WriteLine($"EXP = {expected} ACT = {schedule.NearestPrev(ParseTime(time))}");

			Assert.AreEqual(ParseTime(expected), schedule.Nearest(ParseTime(time)));
		}

		[DataTestMethod]
		[DataRow("2000.01.01 00:00:00.000", "2100-12-31 23:59:59.999", "2000-01-01 00:00:00.000")] // макс. количество итераций при проверке
		[DataRow("*.*.* * *:*:*.*", "2000-01-01 00:00:00.001", "2000-01-01 00:00:00.001")] // "*.*.* * *:*:*.*" (раз в 1 мс)
		[DataRow("*.*.* * *:*:*.*", "2100-12-31 23:59:59.999", "2100-12-31 23:59:59.999")]
		[DataRow("*.*.* 1,3,5 *:*:*.*", "2021-08-02 00:00:00.500", "2021-08-02 00:00:00.500")] // 1,2,3-5,10-20/3 означает список 1,2,3,4,5,10,13,16,19
		[DataRow("*.*.* 1,3,5 *:*:*.*", "2021-08-05 00:00:00.500", "2021-08-04 23:59:59.999")]
		[DataRow("*.*.* * *:*:*.1,2,3-5,10-20/3", "2020-01-01 00:00:00.013", "2020-01-01 00:00:00.013")]
		[DataRow("*.*.* * *:*:*.1,2,3-5,10-20/3", "2021-01-01 00:00:00.000", "2020-12-31 23:59:59.019")]
		[DataRow("*.*.* * */4:*:*", "2020-01-01 00:00:00.000", "2020-01-01 00:00:00.000")] // (для часов) */4 означает 0,4,8,12,16,20
		[DataRow("*.*.* * */4:*:*", "2021-01-01 05:50:00.000", "2021-01-01 04:59:59.000")]
		[DataRow("*.9.*/2 1-5 10:00:00.000", "2020-09-03 10:00:00.000", "2020-09-03 10:00:00.000")] // *.9.*/2 1-5 10:00:00.000 означает 10:00 во все дни с пн. по пт. по нечетным числам в сентябре
		[DataRow("*.9.*/2 1-5 10:00:00.000", "2021-09-01 09:59:59.999", "2020-09-29 10:00:00.000")]
		[DataRow("*:00:00", "2020-01-01 00:00:00.000", "2020-01-01 00:00:00.000")] // *:00:00 означает начало любого часа
		[DataRow("*:00:00", "2021-01-01 23:59:59.999", "2021-01-01 23:00:00.000")]
		[DataRow("*.*.01 01:30:00", "2020-01-01 01:30:00.000", "2020-01-01 01:30:00.000")] // *.*.01 01:30:00 означает 01:30 по первым числам каждого месяца
		[DataRow("*.*.01 01:30:00", "2021-01-01 01:29:59.999", "2020-12-01 01:30:00.000")]
		[DataRow("*.*.32 12:00:00", "2020-01-31 12:00:00.000", "2020-01-31 12:00:00.000")] // 32-й день означает последнее число месяца
		[DataRow("*.*.32 12:00:00", "2020-03-29 00:00:00.000", "2020-02-29 12:00:00.000")]
		public void NearestPrev(string scheduleString, string time, string expected)
		{
			var schedule = new Schedule(scheduleString);

			Console.WriteLine($"EXP = {expected} ACT = {schedule.NearestPrev(ParseTime(time))}");

			Assert.AreEqual(ParseTime(expected), schedule.NearestPrev(ParseTime(time)));
		}

		private static DateTime ParseTime(string timeStr)
		{
			DateTime dt = DateTime.ParseExact(timeStr, "yyyy-MM-dd H:mm:ss.fff", CultureInfo.InvariantCulture, DateTimeStyles.None);
			
			//Console.WriteLine(dt);

			return dt;
		}
	}


}
